struct Point {
    int x;
    int y;
};
int f(int x, bool b) {
	return 0;
}
void g() {
    int a;
    bool b;
    struct Point p;
    p.x = a;
    b = a == 3;
    f(a + p.y*2, b);
    g();
    return;
}

int x;
int b;

struct Node {
   struct Point pt;
};
bool z;
int createNode(int a) {
    struct Node n;
    int x;
    bool bo;
    int y;
    int pt;
    n.pt.x = 1;
    x=(n.pt.y+1);
    n.pt.x = a;
    n.pt.x = b;
    if (b == -1) { 
        x = 4+3*5-y; 
        while (true) { 
            y = y*2+x; 
        } 
    } 
    else {
        x = 0;
        x = 1+2*3-x;
        x++;
        x--;
        x = createNode((1+2));
    }
    
    while(true||false) {
        bo = 1 == x;
        bo = true == true;
        bo = x != 2;
        bo = true && bo;
        bo = bo || false;
        bo = !true;
        bo = 2<=4 || 4>=x;
    }
    
    if (true||false&&false&&bo||bo) {
        x = f(x+1-2/3*5/6-5*8+9-10,bo&&!bo||!bo&&(1!=2))*2;
        x = (1/2/3/4*4*5*6); 
    }
    n.pt.x = n.pt.y+n.pt.x/23*22;
    
    return (n.pt.x*2)+(2-3/4);
}

bool m(int x, bool b) {
    if (z == false) {
    	int l;
    }
    else {
	    return (true==!false)&&(1!=2);
	}
	
	while (!m(1,!false)) {
		b = (1<=0)||(123>=x)||(x==x)||(true==true);
		b = (1<=0)&&(123>=x)&&(b!=b)&&(true!=true);
		cout << "Hello World";
		cin >> x;
		return m(1,!false);
		return createNode(1)==createNode(2);
	}
}

struct struct1{
       int foo;
};

struct struct2{
        struct struct1 s;
};
struct struct3{
       struct struct2 v;
};

int test(int ik)
{
 struct struct3 z;
 z.v.s.foo = 100;
 test(test(test(1)));
 return test(x);
 cout << "jfaskldjf";
 cout << true;
 cout << 10;

 cin >> true;
 cin >> 5;
}
