int x;
int y;
bool a;
bool b;
void s;
void t;
struct Magic {
	int i;
	bool b;
};
int funcTest(int a, bool b) {
	int x;
	void y;
	if (x == 1) {
        int x;
		bool y;
	}
	if (y+5 < 2) {
		int You;
		bool I;
		y = 2+4;
	}
	else {
		void me;
	}
	while (5 <= 2) {
		void us;
		us = ((1-2+3)*4/2);
        if (us) {
        }
	}
}
void functionTest() {
    print("Whats up");
    doNothing();
    print(doNothing());
    functionCall(123+123, "wORLDS");
    return funcTest(1,2);
}
int StmtTest() {
    int a;
    void x;
    cin >> x;
    cout << "a";
    c++;
    c--;
    return 0;
}
int StructTest() {
    int a;
    struct Magic apples;
    apples.i = 1;
    apples.b = true;
    apples.c = (apples.b*42)/2;
    apples.a.b.c.d.e.f = 1;
    IOTest();
    return(apples.i);
}
int AssocTest() {
    a = 1+2*3+4*5;
    b = 6/2-1-2-3/3;
    c = (1-2)*3;
    d = 0+1 || 123-2 && 123*5;
    e = !0*1;
    f = help.me.Im.trapped.In.Code;
    f = help.him*5+3;
    f = (help.him*5)+3;
    a = (-b*1*2);
    a = -1-2-3-4-5;
}
